services:
    minio:
        restart: unless-stopped
        image: minio/minio:latest
        container_name: mlflow_s3
        ports:
            - "7501:9000"
            - "7502:9001"
        command: server /data --console-address ':7502' --address ':7501'
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - minio_data:/data

    mc:
        image: minio/mc:latest
        depends_on:
            - minio
        container_name: mc
        env_file:
            - .env
        entrypoint: >
            /bin/sh -c "
            /tmp/wait-for-it.sh minio:7501 &&
            /usr/bin/mc alias set minio http://minio:7501 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
            /usr/bin/mc mb minio/mlflow;
            exit 0;
            "
        volumes:
            - ./wait-for-it.sh:/tmp/wait-for-it.sh

    db:
        restart: unless-stopped
        image: mysql/mysql-server:latest
        container_name: mlflow_db
        ports:
            - "3306:3306"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql

    web:
        restart: unless-stopped
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        depends_on:
            - mc
            - db
        ports:
            - "7500:5000"
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:7501
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/ --host 0.0.0.0

volumes:
    dbdata:
    minio_data:
